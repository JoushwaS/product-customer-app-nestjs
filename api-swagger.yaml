openapi: 3.0.0
info:
  title: Microservice API
  description: API documentation for the microservices architecture
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /customers:
    get:
      summary: Get all customers
      tags:
        - Customer
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customers'

    post:
      summary: Create a new customer
      tags:
        - Customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      responses:
        '201':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /customers/{id}:
    get:
      summary: Get a customer by ID
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

    put:
      summary: Update a customer by ID
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomer'
      responses:
        '200':
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

    delete:
      summary: Delete a customer by ID
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Customer deleted

  /products:
    get:
      summary: Get all products
      tags:
        - Product
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      summary: Create a new product
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      summary: Get a product by ID
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

    put:
      summary: Update a product by ID
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

    delete:
      summary: Delete a product by ID
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string

    CreateCustomer:
      type: object
      properties:
        name:
          type: string
        email:
          type: string

    UpdateCustomer:
      type: object
      properties:
        name:
          type: string
        email:
          type: string

    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number

    CreateProduct:
      type: object
      properties:
        name:
          type: string
        price:
          type: number

    UpdateProduct:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
